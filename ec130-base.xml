<?xml version="1.0"?>
<!--
************************************************************************
EC 130 simulation config.

************************************************************************

 This file is part of FlightGear, the free flight simulator
 http://www.flightgear.org/

 Copyright (C) 2009 Heiko Schulz, Heiko.H.Schulz@gmx.net
           (C) 2016 Michael Habarta, mhabarta@freenet.de

 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU General Public License as
 published by the Free Software Foundation; either version 2 of the
 License, or (at your option) any later version.

 This program is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 General Public License for more details.
-->

<PropertyList>
  <sim>
    <description>Eurocopter EC130</description>
    <author>Heiko Schulz, Melchior Franz (Nasal), Michael Habarta (Model-Details, Animations, Liveries)</author>

    <fuel-fraction type="double">0.6</fuel-fraction>

    <sound>
      <path>Aircraft/ec130/Sounds/sound.xml</path>
      <enabled>false</enabled>
    </sound>
 
    <airport>
      <runways>
        <start-offset-m>-0.95</start-offset-m>
      </runways>
    </airport>

    <model>
      <ec130>
        <torque-pct>0</torque-pct>
        <model-info>no detailed info available</model-info>
        <!-- global options for all models/liveries -->
        <state type="int">0</state>
        <rotor-step-deg type="float">-1.0</rotor-step-deg>

        <!-- screen visibility 0: clear, 1: visible, 2: shaded -->
        <cockpit-windscreen-option type="float">1</cockpit-windscreen-option>
        <shadow type="bool">true</shadow>

        <!-- model/livery specific options -->
        <!-- 0: only right, 1: only left, 2: left and right -->
        <antenna_left type="int">0</antenna_left>
        <antenna_tail_front type="bool">false</antenna_tail_front>
        <vor_2_roof type="bool">false</vor_2_roof>
        <adf_bottom type="bool">false</adf_bottom>
        <adf_roof type="bool">false</adf_roof>
        <VUHF type="bool">false</VUHF>
        <VUHF_front type="bool">false</VUHF_front>
        <antenna_flat_tail type="bool">false</antenna_flat_tail>
        <!-- 0: off, 1: front, 2: rear -->
        <antenna_square_tail type="int">0</antenna_square_tail>
        <DME type="bool">false</DME>
        <DME_small type="bool">false</DME_small>
        <copilot_controls type="bool">true</copilot_controls>

        <!-- 4: rescue configuration, 5/6: number of seats  -->
        <interior_passengers type="float">5</interior_passengers>

        <show_gsdi type="bool">false</show_gsdi>
        <wirecutter type="bool">false</wirecutter>
        <mirror type="bool">false</mirror>
        <FLIR type="bool">false</FLIR>
        <emerg_floats type="bool">false</emerg_floats>
        <basket_left type="bool">false</basket_left>
        <basket_right type="bool">false</basket_right>
        <searchlight_a800 type="bool">false</searchlight_a800>
        <searchlight type="bool">false</searchlight>
        <searchlight_filter type="bool">false</searchlight_filter>
        <snowshoes type="bool">false</snowshoes>
        <hoist type="bool">false</hoist>
        <stabi_strobe type="bool">false</stabi_strobe>
        <gear_strobe type="bool">false</gear_strobe>
        <gear_light type="bool">false</gear_light>
        <luggage_wide type="bool">false</luggage_wide>
      </ec130>

      <!-- searchlight default settings -->
      <searchlight>
        <!-- range of lightcone 1: small, 2: medium, 3: large, 4: xlarge -->
        <state-default type="float">3.0</state-default>
        <!-- color 1: white, 2: amber, 3: red, 4: IR filter -->
        <filter-state-default type="int">1</filter-state-default>
        <!-- intensity of light-cone 0: off, 1: low, 2: medium, 3: high -->
        <cone-visibility-default type="float">1.0</cone-visibility-default>
        <!-- slew rate fraction: 1: fast, 2: medium, 3:slow -->
        <slew-rate-frac-default type="int">1</slew-rate-frac-default>

        <!-- initial orientation relative to model -->
        <sx16>
          <!-- heading + left, - right -->
          <heading-default-deg type="float">0.0</heading-default-deg>
          <heading-min-deg type="float">-90.0</heading-min-deg>
          <heading-max-deg type="float">30.0</heading-max-deg>
          <!-- elevation + up, - down -->
          <elevation-default-deg type="float">2.0</elevation-default-deg>
          <elevation-min-deg type="float">-50.0</elevation-min-deg>
          <elevation-max-deg type="float">3.0</elevation-max-deg>
          <slew-rate-deg>18.0</slew-rate-deg>
        </sx16>
        <a800>
          <!-- heading + left, - right -->
          <heading-default-deg type="float">0.0</heading-default-deg>
          <heading-min-deg type="float">120.0</heading-min-deg>
          <heading-max-deg type="float">360.0</heading-max-deg>
          <!-- elevation + up, - down -->
          <elevation-default-deg type="float">0.0</elevation-default-deg>
          <elevation-min-deg type="float">-90.0</elevation-min-deg>
          <elevation-max-deg type="float">35.0</elevation-max-deg>
          <slew-rate-deg>60.0</slew-rate-deg>
        </a800>
      </searchlight>

    </model>

    <fire>
      <enabled type="bool">false</enabled>
      <part-per-sec type="int">0</part-per-sec>
      <life-sec type="float">0</life-sec>
    </fire>

    <smoke>
      <enabled type="bool">false</enabled>
      <part-per-sec type="int">0</part-per-sec>
      <life-sec type="float">0</life-sec>
    </smoke>

    <rendering>
      <refl_correction type="float">-0.1</refl_correction>
    </rendering>

    <systems>
      <path>Aircraft/ec130/Systems/systems.xml</path>
      <autopilot>
        <path>Aircraft/ec130/Models/Instruments/filter.xml</path>
      </autopilot>
      <electrical>
        <path></path>
      </electrical>
    </systems>
    <instrumentation>
      <path>Aircraft/ec130/Systems/instruments.xml</path>
    </instrumentation>

    <!--view-->
    <chase-distance-m type="double" archive="y">-15.0</chase-distance-m>
    <view-autozoom-percent-default type="double" userarchive="y">25</view-autozoom-percent-default>

    <view n="0">
      <name>Cockpit View</name>
      <internal type="bool">true</internal>
      <config>
        <x-offset-m archive="y"> -0.67 </x-offset-m> <!--right-->
        <y-offset-m archive="y">  0.03 </y-offset-m> <!--up   -->
        <z-offset-m archive="y"> -3.95 </z-offset-m> <!--back -->
        <pitch-offset-deg>-15</pitch-offset-deg>
        <default-field-of-view-deg type="double">85</default-field-of-view-deg>
        <dynamic-view type="bool">true</dynamic-view>
      </config>
    </view>

    <view n="101">
      <name>Co-Pilot View</name>
      <internal type="bool">true</internal>
      <type>lookfrom</type>
      <config>
        <from-model type="bool">true</from-model>
        <from-model-idx type="int">0</from-model-idx>
        <ground-level-nearplane-m type="double">0.5f</ground-level-nearplane-m>
        <x-offset-m archive="y"> -0.01 </x-offset-m> <!--right-->
        <y-offset-m archive="y">  0.03 </y-offset-m> <!--up   -->
        <z-offset-m archive="y"> -3.96 </z-offset-m> <!--back -->
        <pitch-offset-deg>-15</pitch-offset-deg>
        <heading-offset-deg>0</heading-offset-deg>
        <default-field-of-view-deg type="double">85</default-field-of-view-deg>
        <dynamic-view type="bool">true</dynamic-view>
        <limits>
          <enabled type="bool">true</enabled>
          <left>
            <heading-max-deg type="double">140</heading-max-deg>
            <x-offset-max-m type="double">0.15</x-offset-max-m>
            <x-offset-threshold-deg type="double">65</x-offset-threshold-deg>
          </left>
          <right>
            <heading-max-deg type="double">140</heading-max-deg>
            <x-offset-max-m type="double">0.15</x-offset-max-m>
            <x-offset-threshold-deg type="double">65</x-offset-threshold-deg>
          </right>
        </limits>
      </config>
      <enabled type="bool">true</enabled>
    </view>

    <view n="102">
      <name>Front Left Seat View</name>
      <internal type="bool">true</internal>
      <type>lookfrom</type>
      <config>
        <from-model type="bool">true</from-model>
        <from-model-idx type="int">0</from-model-idx>
        <ground-level-nearplane-m type="double">0.5f</ground-level-nearplane-m>
        <x-offset-m archive="y">  0.35 </x-offset-m> <!--right-->
        <y-offset-m archive="y">  0.05 </y-offset-m> <!--up   -->
        <z-offset-m archive="y"> -4.10 </z-offset-m> <!--back -->
        <pitch-offset-deg>-15</pitch-offset-deg>
        <heading-offset-deg>0</heading-offset-deg>
        <default-field-of-view-deg type="double">75</default-field-of-view-deg>
        <dynamic-view type="bool">true</dynamic-view>
        <limits>
          <enabled type="bool">true</enabled>
          <left>
            <heading-max-deg type="double">140</heading-max-deg>
            <x-offset-max-m type="double">0.15</x-offset-max-m>
            <x-offset-threshold-deg type="double">65</x-offset-threshold-deg>
          </left>
          <right>
            <heading-max-deg type="double">140</heading-max-deg>
            <x-offset-max-m type="double">0.15</x-offset-max-m>
            <x-offset-threshold-deg type="double">65</x-offset-threshold-deg>
          </right>
        </limits>
      </config>
      <enabled type="bool">true</enabled>
    </view>

    <view n="103">
      <name>Front Right Seat View</name>
      <internal type="bool">true</internal>
      <type>lookfrom</type>
      <config>
        <from-model type="bool">true</from-model>
        <from-model-idx type="int">0</from-model-idx>
        <ground-level-nearplane-m type="double">0.5f</ground-level-nearplane-m>
        <!-- Attention: view position is handled in special view handler -->
        <!-- Limits MUST NOT be defined here and are handled in the view handler ! -->
        <x-offset-m archive="y">  0.73 </x-offset-m> <!--right-->
        <y-offset-m archive="y">  0.05 </y-offset-m> <!--up   -->
        <z-offset-m archive="y"> -3.93 </z-offset-m> <!--back -->
        <pitch-offset-deg>-15</pitch-offset-deg>
        <heading-offset-deg>0</heading-offset-deg>
        <default-field-of-view-deg type="double">75</default-field-of-view-deg>
        <dynamic-view type="bool">true</dynamic-view>
      </config>
      <enabled type="bool">true</enabled>
    </view>

    <view n="104">
      <name>Rear Left Seat View</name>
      <internal type="bool">true</internal>
      <type>lookfrom</type>
      <config>
       <from-model type="bool">true</from-model>
       <from-model-idx type="int">0</from-model-idx>
        <ground-level-nearplane-m type="double">0.5f</ground-level-nearplane-m>
        <x-offset-m archive="y"> -0.70 </x-offset-m> <!--right-->
        <y-offset-m archive="y">  0.12 </y-offset-m> <!--up   -->
        <z-offset-m archive="y"> -2.98 </z-offset-m> <!--back -->
        <pitch-offset-deg>-15</pitch-offset-deg>
        <heading-offset-deg>0</heading-offset-deg>
        <default-field-of-view-deg type="double">75</default-field-of-view-deg>
        <dynamic-view type="bool">true</dynamic-view>
        <limits>
          <enabled type="bool">true</enabled>
          <left>
            <heading-max-deg type="double">140</heading-max-deg>
            <x-offset-max-m type="double">0.15</x-offset-max-m>
            <x-offset-threshold-deg type="double">65</x-offset-threshold-deg>
          </left>
          <right>
            <heading-max-deg type="double">140</heading-max-deg>
            <x-offset-max-m type="double">0.15</x-offset-max-m>
            <x-offset-threshold-deg type="double">65</x-offset-threshold-deg>
          </right>
        </limits>
      </config>
      <enabled type="bool">true</enabled>
    </view>

    <view n="105">
      <name>Rear Mid Left Seat View</name>
      <internal type="bool">true</internal>
      <type>lookfrom</type>
      <config>
       <from-model type="bool">true</from-model>
       <from-model-idx type="int">0</from-model-idx>
        <ground-level-nearplane-m type="double">0.5f</ground-level-nearplane-m>
        <x-offset-m archive="y"> -0.23 </x-offset-m> <!--right-->
        <y-offset-m archive="y">  0.12 </y-offset-m> <!--up   -->
        <z-offset-m archive="y"> -2.98 </z-offset-m> <!--back -->
        <pitch-offset-deg>-15</pitch-offset-deg>
        <heading-offset-deg>0</heading-offset-deg>
        <default-field-of-view-deg type="double">75</default-field-of-view-deg>
        <dynamic-view type="bool">true</dynamic-view>
        <limits>
          <enabled type="bool">true</enabled>
          <left>
            <heading-max-deg type="double">140</heading-max-deg>
            <x-offset-max-m type="double">0.15</x-offset-max-m>
            <x-offset-threshold-deg type="double">65</x-offset-threshold-deg>
          </left>
          <right>
            <heading-max-deg type="double">140</heading-max-deg>
            <x-offset-max-m type="double">0.15</x-offset-max-m>
            <x-offset-threshold-deg type="double">65</x-offset-threshold-deg>
          </right>
        </limits>
      </config>
      <enabled type="bool">true</enabled>
    </view>

    <view n="106">
      <name>Rear Mid Right Seat View</name>
      <internal type="bool">true</internal>
      <type>lookfrom</type>
      <config>
       <from-model type="bool">true</from-model>
       <from-model-idx type="int">0</from-model-idx>
        <ground-level-nearplane-m type="double">0.5f</ground-level-nearplane-m>
        <x-offset-m archive="y">  0.25 </x-offset-m> <!--right-->
        <y-offset-m archive="y">  0.11 </y-offset-m> <!--up   -->
        <z-offset-m archive="y"> -2.98 </z-offset-m> <!--back -->
        <pitch-offset-deg>-15</pitch-offset-deg>
        <heading-offset-deg>0</heading-offset-deg>
        <default-field-of-view-deg type="double">75</default-field-of-view-deg>
        <dynamic-view type="bool">true</dynamic-view>
        <limits>
          <enabled type="bool">true</enabled>
          <left>
            <heading-max-deg type="double">140</heading-max-deg>
            <x-offset-max-m type="double">0.15</x-offset-max-m>
            <x-offset-threshold-deg type="double">65</x-offset-threshold-deg>
          </left>
          <right>
            <heading-max-deg type="double">140</heading-max-deg>
            <x-offset-max-m type="double">0.15</x-offset-max-m>
            <x-offset-threshold-deg type="double">65</x-offset-threshold-deg>
          </right>
        </limits>
      </config>
      <enabled type="bool">true</enabled>
    </view>

    <view n="107">
      <name>Patient View</name>
      <internal type="bool">true</internal>
      <type>lookfrom</type>
      <config>
       <from-model type="bool">true</from-model>
       <from-model-idx type="int">0</from-model-idx>
        <ground-level-nearplane-m type="double">0.5f</ground-level-nearplane-m>
        <!-- Attention: view position is handled in special view handler -->
        <!-- Limits are handled there too and MUST NOT be defined here ! -->
        <x-offset-m archive="y">  0.53 </x-offset-m> <!--right-->
        <y-offset-m archive="y">  0.11 </y-offset-m> <!--up   -->
        <z-offset-m archive="y"> -2.98 </z-offset-m> <!--back -->
        <pitch-offset-deg>-15</pitch-offset-deg>
        <heading-offset-deg>0</heading-offset-deg>
        <default-field-of-view-deg type="double">75</default-field-of-view-deg>
        <dynamic-view type="bool">true</dynamic-view>
      </config>
      <enabled type="bool">true</enabled>
    </view>

    <view n="108">
      <name>Rear Right Seat View</name>
      <internal type="bool">true</internal>
      <type>lookfrom</type>
      <config>
       <from-model type="bool">true</from-model>
       <from-model-idx type="int">0</from-model-idx>
        <ground-level-nearplane-m type="double">0.5f</ground-level-nearplane-m>
        <x-offset-m archive="y">  0.70 </x-offset-m> <!--right-->
        <y-offset-m archive="y">  0.15 </y-offset-m> <!--up   -->
        <z-offset-m archive="y"> -2.98 </z-offset-m> <!--back -->
        <pitch-offset-deg>-15</pitch-offset-deg>
        <heading-offset-deg>0</heading-offset-deg>
        <default-field-of-view-deg type="double">75</default-field-of-view-deg>
        <dynamic-view type="bool">true</dynamic-view>
        <limits>
          <enabled type="bool">true</enabled>
          <left>
            <heading-max-deg type="double">140</heading-max-deg>
            <x-offset-max-m type="double">0.15</x-offset-max-m>
            <x-offset-threshold-deg type="double">65</x-offset-threshold-deg>
          </left>
          <right>
            <heading-max-deg type="double">140</heading-max-deg>
            <x-offset-max-m type="double">0.15</x-offset-max-m>
            <x-offset-threshold-deg type="double">65</x-offset-threshold-deg>
          </right>
        </limits>
      </config>
      <enabled type="bool">true</enabled>
    </view>

    <view n="109">
      <name>Tail Camera View</name>
      <type>lookfrom</type>
      <internal type="bool">false</internal>
      <config>
        <from-model type="bool">true</from-model>
        <from-model-idx type="int">0</from-model-idx>
        <ground-level-nearplane-m type="double">0.01f</ground-level-nearplane-m>
        <default-field-of-view-deg type="double">50</default-field-of-view-deg>
        <pitch-offset-deg>0</pitch-offset-deg>
        <x-offset-m archive="y"> 0.000 </x-offset-m> <!--Right-->
        <y-offset-m archive="y">-1.150 </y-offset-m> <!--Up   -->
        <z-offset-m archive="y"> 3.000 </z-offset-m> <!--Back -->
      </config>
      <enabled type="bool">true</enabled>
    </view>

    <view n="110">
      <name>Rotor Camera View</name>
      <type>lookat</type>
      <internal type="bool">false</internal>
      <config>
        <from-model type="bool">true</from-model>
        <from-model-idx type="int">0</from-model-idx>

        <at-model type="bool">true</at-model>
        <at-model-idx type="int">0</at-model-idx>

        <target-y-offset-m type="double"> 1.5</target-y-offset-m>
        <target-z-offset-m type="double">-2.0</target-z-offset-m>

        <default-field-of-view-deg type="double">50</default-field-of-view-deg>
        <pitch-offset-deg>0</pitch-offset-deg>

        <x-offset-m archive="y"> 0.000 </x-offset-m> <!--Right-->
        <y-offset-m archive="y"> 0.000 </y-offset-m> <!--Up   -->
        <z-offset-m archive="y">-3.000 </z-offset-m> <!--Back -->

      </config>
      <enabled type="bool">true</enabled>
    </view>

    <view n="111">
      <name>Searchlight Watch View</name>
      <type>lookfrom</type>
      <internal type="bool">false</internal>
      <config>
        <from-model type="bool">true</from-model>
        <from-model-idx type="int">0</from-model-idx>
        <ground-level-nearplane-m type="double">0.01f</ground-level-nearplane-m>
        <default-field-of-view-deg type="double">45</default-field-of-view-deg>
        <pitch-offset-deg>-20</pitch-offset-deg>
        <x-offset-m archive="y">-1.100 </x-offset-m> <!--Right-->
        <y-offset-m archive="y">-0.600 </y-offset-m> <!--Up   -->
        <z-offset-m archive="y">-3.500 </z-offset-m> <!--Back -->
      </config>
      <enabled type="bool">true</enabled>
      <enabled_flag type="bool">true</enabled_flag>
    </view>

    <view n="112">
      <name>Searchlight Follow View</name>
      <type>lookfrom</type>
      <internal type="bool">false</internal>
      <config>
        <from-model type="bool">true</from-model>
        <from-model-idx type="int">0</from-model-idx>
        <ground-level-nearplane-m type="double">0.01f</ground-level-nearplane-m>
        <default-field-of-view-deg type="double">20</default-field-of-view-deg>
        <x-offset-m archive="y"> -1.200 </x-offset-m> <!--Right-->
        <y-offset-m archive="y"> -1.220 </y-offset-m> <!--Up   -->
        <z-offset-m archive="y"> -4.940 </z-offset-m> <!--Back -->
      </config>
      <enabled type="bool">true</enabled>
      <enabled_flag type="bool">true</enabled_flag>
    </view>

    <weight n="0">
       <name>Pilot</name>
       <weight-lb type="double">180</weight-lb>
       <min-lb>30</min-lb>
       <max-lb>330</max-lb>
    </weight>

    <weight n="1">
       <name>Co-Pilot</name>
       <weight-lb type="double">30</weight-lb>
       <min-lb>30</min-lb>
       <max-lb>330</max-lb>
    </weight>

    <weight n="2">
       <name>Front Left</name>
       <weight-lb type="double">0</weight-lb>
       <min-lb>0</min-lb>
       <max-lb>330</max-lb>
    </weight>

    <weight n="3">
       <name>Front Right</name>
       <weight-lb type="double">180</weight-lb>
       <min-lb>30</min-lb>
       <max-lb>330</max-lb>
    </weight>

    <weight n="4">
       <name>Rear Left</name>
       <weight-lb type="double">190</weight-lb>
       <min-lb>30</min-lb>
       <max-lb>330</max-lb>
    </weight>

    <weight n="5">
       <name>Rear Mid Left</name>
       <weight-lb type="double">30</weight-lb>
       <min-lb>30</min-lb>
       <max-lb>330</max-lb>
    </weight>

    <weight n="6">
       <name>Rear Mid Right</name>
       <weight-lb type="double">0</weight-lb>
       <max-lb>300</max-lb>
    </weight>

    <weight n="7">
       <name>Rear Right</name>
       <weight-lb type="double">190</weight-lb>
       <min-lb>30</min-lb>
       <max-lb>330</max-lb>
    </weight>

    <!-- flag meaning:                                                   -->
    <!--  ems: 0 ... not in EMS,  =1 ... yes in EMS,  2 ... only in EMS  -->
    <!-- wide: 0 ... not in wide, =1 ... yes in wide, 2 ... only in wide -->
    <weight n="8">
       <name>Luggage Left</name>
       <weight-lb type="double">0</weight-lb>
       <max-lb>300</max-lb>
       <luggage-cnt type="int">0</luggage-cnt>
       <luggage n="0">
         <weight-lb type="double">50</weight-lb>
       </luggage>
       <luggage n="1">
         <weight-lb type="double">30</weight-lb>
       </luggage>
       <luggage n="2">
         <weight-lb type="double">30</weight-lb>
       </luggage>
       <luggage n="3">
         <weight-lb type="double">30</weight-lb>
       </luggage>
       <luggage n="4">
         <weight-lb type="double">30</weight-lb>
       </luggage>
       <!-- wide box only -->
       <luggage n="5">
         <weight-lb type="double">20</weight-lb>
         <wide type="int">2</wide>
       </luggage>
       <luggage n="6">
         <weight-lb type="double">20</weight-lb>
         <wide type="int">2</wide>
       </luggage>
       <luggage n="7">
         <weight-lb type="double">20</weight-lb>
         <wide type="int">2</wide>
       </luggage>
       <luggage n="8">
         <weight-lb type="double">20</weight-lb>
         <wide type="int">2</wide>
       </luggage>
    </weight>

    <!-- flag meaning:                                                   -->
    <!--  ems: 0 ... not in EMS,  =1 ... yes in EMS,  2 ... only in EMS  -->
    <!-- wide: 0 ... not in wide, =1 ... yes in wide, 2 ... only in wide -->
    <weight n="9">
       <name>Luggage Right</name>
       <weight-lb type="double">60</weight-lb>
       <max-lb>300</max-lb>
       <luggage-cnt type="int">0</luggage-cnt>
       <luggage-cnt-ems type="int">0</luggage-cnt-ems>
       <luggage n="0">
         <weight-lb type="double">30</weight-lb>
         <ems type="int">0</ems>
       </luggage>
       <luggage n="1">
         <weight-lb type="double">30</weight-lb>
         <ems type="int">0</ems>
       </luggage>
       <luggage n="2">
         <weight-lb type="double">30</weight-lb>
         <ems type="int">0</ems>
       </luggage>
       <luggage n="3">
         <weight-lb type="double">30</weight-lb>
         <ems type="int">0</ems>
       </luggage>
       <luggage n="4">
         <weight-lb type="double">30</weight-lb>
         <ems type="int">0</ems>
       </luggage>
       <luggage n="5">
         <weight-lb type="double">20</weight-lb>
         <ems type="int">0</ems>
       </luggage>
       <luggage n="6">
         <weight-lb type="double">20</weight-lb>
         <ems type="int">0</ems>
       </luggage>
       <luggage n="7">
         <weight-lb type="double">20</weight-lb>
         <ems type="int">0</ems>
       </luggage>
       <!-- wide box only -->
       <luggage n="8">
         <weight-lb type="double">20</weight-lb>
         <wide type="int">2</wide>
         <ems type="int">0</ems>
       </luggage>
       <luggage n="9">
         <weight-lb type="double">30</weight-lb>
         <wide type="int">2</wide>
         <ems type="int">0</ems>
       </luggage>
       <luggage n="10">
         <weight-lb type="double">20</weight-lb>
         <wide type="int">2</wide>
         <ems type="int">0</ems>
       </luggage>
       <!-- ems only -->
       <luggage n="11">
         <weight-lb type="double">30</weight-lb>
         <ems type="int">2</ems>
       </luggage>
       <luggage n="12">
         <weight-lb type="double">30</weight-lb>
         <ems type="int">2</ems>
       </luggage>
    </weight>

    <weight n="10">
       <name>Luggage Back</name>
       <weight-lb type="double">60</weight-lb>
       <max-lb>176</max-lb>
       <luggage-cnt type="int">0</luggage-cnt>
       <luggage n="0">
         <weight-lb type="double">30</weight-lb>
       </luggage>
       <luggage n="1">
         <weight-lb type="double">30</weight-lb>
       </luggage>
    </weight>

    <weight n="11">
       <name>Basket Left</name>
       <weight-lb type="double">0</weight-lb>
       <max-lb>200</max-lb>
       <luggage-cnt type="int">0</luggage-cnt>
       <luggage n="0">
         <weight-lb type="double">20</weight-lb>
       </luggage>
       <luggage n="1">
         <weight-lb type="double">20</weight-lb>
       </luggage>
       <luggage n="2">
         <weight-lb type="double">20</weight-lb>
       </luggage>
       <luggage n="3">
         <weight-lb type="double">20</weight-lb>
       </luggage>
       <luggage n="4">
         <weight-lb type="double">20</weight-lb>
       </luggage>
    </weight>

    <weight n="12">
       <name>Basket Right</name>
       <weight-lb type="double">0</weight-lb>
       <max-lb>200</max-lb>
       <luggage-cnt type="int">0</luggage-cnt>
       <luggage n="0">
         <weight-lb type="double">20</weight-lb>
       </luggage>
       <luggage n="1">
         <weight-lb type="double">20</weight-lb>
       </luggage>
       <luggage n="2">
         <weight-lb type="double">20</weight-lb>
       </luggage>
       <luggage n="3">
         <weight-lb type="double">20</weight-lb>
       </luggage>
       <luggage n="4">
         <weight-lb type="double">20</weight-lb>
       </luggage>
    </weight>

    <weight n="13">
       <name>Equipment</name>
       <weight-lb type="double">0</weight-lb>
       <max-lb>800</max-lb>
    </weight>

    <hitches>
      <!-- make sure some properties do exist, when the list for multiplayer transfer is defined-->
      <!-- they need to be in the same value, as they are initialized in the FDM,
           to get the same values after reset should fix this somehow-->
      <aerotow>
        <tow>
          <length type="float">30</length>
          <elastic-constant type="float">10000</elastic-constant>
          <weight-per-m-kg-m type="float">0.035</weight-per-m-kg-m>
          <dist type="float">1</dist>
          <connected-to-property-node type="bool"></connected-to-property-node>
          <brake-force type="float">100000</brake-force>
          <connected-to-ai-or-mp-callsign type ="string">*</connected-to-ai-or-mp-callsign>
          <end-force-x type ="float">0</end-force-x>
          <end-force-y type ="float">0</end-force-y>
          <end-force-z type ="float">0</end-force-z>
        </tow>
        <speed-in-tow-direction type="float">0</speed-in-tow-direction>
        <open type="bool">true</open>
        <x-m> -1.830 </x-m>
        <y-m>  0.000 </y-m>
        <z-m> -1.510 </z-m>
        <local-pos-x type="float">-1.86</local-pos-x>
        <local-pos-y type="float">0</local-pos-y>
        <local-pos-z type="float">-1.54</local-pos-z>
        <is-slave type="bool">false</is-slave>
      </aerotow>
    </hitches>

    <multiplay>
      <generic>

        <!-- wake control -->
        <int n="0" alias="/gear/gear/ground-is-solid"/>

        <!-- lights -->
        <int n="1" alias="/systems/electrical/outputs/taxi-light"/>
        <int n="2" alias="/systems/electrical/outputs/nav-lights"/>
        <int n="3" alias="/controls/lighting/strobe-state/state"/>
        <int n="4" alias="/systems/electrical/outputs/landing-light"/>
        <int n="5" alias="/systems/electrical/outputs/beacon"/>

        <!-- equipment -->
        <int n="6" alias="/controls/electric/external-power"/>

        <int n="7"  alias="/sim/model/ec130/stabi_strobe"/>
        <int n="8"  alias="/sim/model/ec130/gear_strobe"/>
        <int n="9"  alias="/sim/model/ec130/gear_light"/>
        <int n="10" alias="/sim/model/ec130/emerg_floats"/>
        <int n="11" alias="/sim/model/ec130/searchlight"/>
        <int n="12" alias="/sim/model/ec130/hoist"/>
        <int n="13" alias="/sim/model/ec130/basket_left"/>
        <int n="14" alias="/sim/model/ec130/basket_right"/>
        <int n="15" alias="/sim/model/ec130/snowshoes"/>
        <int n="16" alias="/sim/model/ec130/mirror"/>
        <int n="17" alias="/sim/model/ec130/FLIR"/>
        <int n="18" alias="/sim/model/ec130/luggage_wide"/>
        <int n="19" alias="/sim/model/ec130/wirecutter"/>

        <!-- floats -->
        <float n="0" alias="/gear/gear[6]/position-norm"/>

        <!-- wake control -->
        <float n="1" alias="/orientation/pitch-deg"/>
        <float n="2" alias="/orientation/roll-deg"/>
        <float n="3" alias="/rotors/main/torque"/>
        <float n="4" alias="/position/gear-agl-m"/>

        <!-- doors -->
        <float n="5" alias="/sim/model/ec130/doors/frontl/position-norm"/>
        <float n="6" alias="/sim/model/ec130/doors/frontr/position-norm"/>
        <float n="7" alias="/sim/model/ec130/doors/passengerl/position-norm"/>
        <float n="8" alias="/sim/model/ec130/doors/passengerr/position-norm"/>
        <float n="9" alias="/sim/model/ec130/doors/luggagel/position-norm"/>
        <float n="10" alias="/sim/model/ec130/doors/luggager/position-norm"/>
        <float n="11" alias="/sim/model/ec130/doors/door/position-norm"/>
        <float n="12" alias="/sim/model/ec130/doors/basketl/position-norm"/>
        <float n="13" alias="/sim/model/ec130/doors/basketr/position-norm"/>

        <!-- searchlight SX16 -->
        <float n="14" alias="/controls/electric/engine/generator"/>
        <float n="15" alias="/sim/model/searchlight/heading-deg"/>
        <float n="16" alias="/sim/model/searchlight/elevation-deg"/>
        <float n="17" alias="/sim/model/searchlight/state"/>
        <float n="18" alias="/sim/model/searchlight/active"/>
        <float n="19" alias="/sim/model/searchlight/paused"/>

      </generic>
    </multiplay>

    <flight-recorder include="Systems/flight-recorder.xml"/>

    <help>
      <key>
        <name>-----</name>
        <desc>---- startup ----</desc>
      </key>

      <key>
        <name>Alt-p</name>
        <desc>toggle external Power</desc>
      </key>

      <key>
        <name>AltGr-p</name>
        <desc>toggle Fuel Pump</desc>
      </key>

      <key>
        <name>Ctrl-e</name>
        <desc>Autostart</desc>
      </key>

      <key>
        <name>Shift-E</name>
        <desc>Autoshutdown</desc>
      </key>

      <key>
        <name>r</name>
        <desc>apply Rotor Brake</desc>
      </key>

      <key>
        <name>Shift-R</name>
        <desc>toggle Rotor Brake</desc>
      </key>

      <key>
        <name>Alt-r</name>
        <desc>toggle Rotor Brake Lock</desc>
      </key>

      <key>
        <name>Alt-c</name>
        <desc>toggle Cutoff Lever</desc>
      </key>

      <key>
        <name>AltGr-c</name>
        <desc>toggle Cutoff Lever Guard</desc>
      </key>

      <key>
        <name>Alt-t</name>
        <desc>Twist Grip +</desc>
      </key>

      <key>
        <name>AltGr-t</name>
        <desc>Twist Grip -</desc>
      </key>

      <key>
        <name>Alt-h</name>
        <desc>toggle Horn</desc>
      </key>

      <key>
        <name>Alt-w</name>
        <desc>W/LT TST (Warning Test)</desc>
      </key>

      <key>
        <name>-----</name>
        <desc>---- flight ----</desc>
      </key>

      <!-- doesn't work for RC radio -->
      <key>
        <name>f</name>
        <desc>Force Trim Release</desc>
      </key>

      <key>
        <name>t</name>
        <desc>direct trim Aileron/Elevator</desc>
      </key>

      <key>
        <name>Shift-T</name>
        <desc>direct trim Rudder</desc>
      </key>

      <key>
        <name>a</name>
        <desc>set Collective to Zero</desc>
      </key>

      <key>
        <name>-----</name>
        <desc>---- doors ----</desc>
      </key>

      <key>
        <name>1</name>
        <desc>toggle Pilot Door</desc>
      </key>

      <key>
        <name>2</name>
        <desc>toggle Front Door right</desc>
      </key>

      <key>
        <name>3</name>
        <desc>toggle Back Door left</desc>
      </key>

      <key>
        <name>4</name>
        <desc>toggle Back Door right</desc>
      </key>

      <key>
        <name>d</name>
        <desc>toggle Pilot Door</desc>
      </key>

      <key>
        <name>Shift-D</name>
        <desc>toggle Passenger Doors</desc>
      </key>

      <key>
        <name>Ctrl-d</name>
        <desc>toggle all Doors</desc>
      </key>

      <key>
        <name>Alt-d</name>
        <desc>toggle Luggage Doors</desc>
      </key>

      <key>
        <name>Alt-b</name>
        <desc>toggle Basket Covers</desc>
      </key>

      <key>
        <name>AltGr-d</name>
        <desc>toggle Pilot Window</desc>
      </key>

      <key>
        <name>-----</name>
        <desc>---- light ----</desc>
      </key>

      <key>
        <name>L</name>
        <desc>toggle Taxi Light</desc>
      </key>

      <key>
        <name>Shift-L</name>
        <desc>toggle Landing Light</desc>
      </key>

      <key>
        <name>AltGr-L</name>
        <desc>toggle Search Light ON/OFF</desc>
      </key>

      <key>
        <name>Ctrl-L</name>
        <desc>cycle Slew Rate</desc>
      </key>

      <key>
        <name>j/Shift-J</name>
        <desc>rotate Search Light left/right</desc>
      </key>

      <key>
        <name>k/Shift-K</name>
        <desc>rotate Search Light down/up</desc>
      </key>

      <key>
        <name>s</name>
        <desc>cycle Search Light Focus</desc>
      </key>

      <key>
        <name>Shift-S</name>
        <desc>toggle/cycle Search Light Filter(s)</desc>
      </key>

      <key>
        <name>Alt-s</name>
        <desc>toggle Stabilization (A800)</desc>
      </key>

      <key>
        <name>Ctrl-p</name>
        <desc>pause Search Light</desc>
      </key>

      <key>
        <name>Ctrl-s</name>
        <desc>reset Search Light</desc>
      </key>

      <key>
        <name>Alt-L</name>
        <desc>cycle Light-Cone Visibility</desc>
      </key>

      <key>
        <name>-----</name>
        <desc>---- equipment ----</desc>
      </key>

      <key>
        <name>Shift-F</name>
        <desc>toggle Emergency Floats armed</desc>
      </key>

      <key>
        <name>Alt-f</name>
        <desc>inflate/repack Emergency Floats</desc>
      </key>

      <key>
        <name>o/Shift-O</name>
        <desc>close/open Hook</desc>
      </key>

  <!--
      <key>
        <name>Ctrl-o</name>
        <desc>Find Object to tow</desc>
      </key>
  -->
      <key>
        <name>-----</name>
        <desc>---- simulation ----</desc>
      </key>

      <key>
        <name>Alt-o</name>
        <desc>Configuration Dialog</desc>
      </key>

      <key>
        <name>AltGr-o</name>
        <desc>Simulation Options</desc>
      </key>

      <key>
        <name>Alt-a</name>
        <desc>Antenna Setup</desc>
      </key>

      <key>
        <name>Alt-i</name>
        <desc>Model/Operator Info</desc>
      </key>

      <key>
        <name>Alt-k</name>
        <desc>cycle Rotor Wake Visibility</desc>
      </key>

      <key>
        <name>:A*</name>
        <desc>Multi-Key Commands</desc>
      </key>
  <!--
      <key>
        <name>Alt-g</name>
        <desc>toggle GSDI (Ground Speed/Drift Indicator)</desc>
      </key>
  -->
    </help>

    <checklists include="Tutorials/ec130-checklists.xml"/>

    <tutorials include="Tutorials/ec130_tutorials.xml"/>

    <menubar>
      <default>
        <menu n="10">
        <label>EC130/H130</label>
        <enabled type="bool">true</enabled>

        <!-- ATTENTION: if menubar definiton is changed below make sure
             to cross-check the following code for consistent enable/disable:
               - Nasal start script below
               - Dialog: ec130-config-dialog.xml
        -->

        <!-- 0 -->
        <item>
          <label>Configuration (Livery,Payload,...)</label>
          <key>Alt-o</key>
            <binding>
            <command>nasal</command>
            <script>
              if ( getprop("gear/gear[0]/wow") ) {
                if ( getprop("/sim/model/ec130/config_dialog_active") ) {
                  setprop("/sim/model/ec130/config_dialog_active",0);
                }
                ec130.config_dialog.open();
              } else {
                screen.log.write("Only possible on ground !!!");
              }
            </script>
            </binding>
        </item>

        <!-- 1 -->
        <item>
          <label>Operator/Model Info</label>
          <key>Alt-i</key>
            <binding>
            <command>nasal</command>
            <script>
              <!-- toggle config dialog because info and config are linked -->
              if ( getprop("/sim/model/ec130/config_dialog_active") ) {
                <!-- use write because popupTip gets hidden behind open dialog -->
                screen.log.write("Close Config Dialog or use '?' Button !");
              } else {
                if ( getprop("/sim/model/ec130/info_dialog_active") ) {
                  setprop("/sim/model/ec130/info_dialog_active",0);
                }
                ec130.model_info_dialog.open();
              }
            </script>
            </binding>
        </item>

        <!-- 2 -->
        <item>
          <label>Simulation Options</label>
          <key>AltGr-o</key>
          <binding>
            <command>nasal</command>
            <script>
              ec130.options_dialog.toggle();
            </script>
          </binding>
        </item>

        <!-- 3 -->
        <item>
          <label>Toggle External Power</label>
          <key>Alt-p</key>
            <binding>
              <command>nasal</command>
              <script>ec130.toggle_powersupply()</script>
            </binding>
        </item>

        <!-- 4 -->
        <item>
          <label>Autostart</label>
          <key>Ctrl-e</key>
            <binding>
              <command>nasal</command>
              <script>ec130.autostart()</script>
            </binding>
        </item>

        <!-- 5 -->
        <item>
          <label>Autoshutdown</label>
          <key>Shift-E</key>
            <binding>
              <command>nasal</command>
              <script>ec130.autoshutdown()</script>
            </binding>
        </item>

        <!-- 6 -->
        <item>
          <label>Repack Emergency Floats</label>
          <key>Alt-f</key>
             <binding>
              <command>nasal</command>
              <script>
                if ( getprop("/sim/model/ec130/emerg_floats") and getprop("/controls/gear/floats-inflat") ) {
                  if ( getprop("gear/gear[0]/wow") or getprop("gear/gear[1]/wow") or getprop("gear/gear[2]/wow") or getprop("gear/gear[3]/wow") ) {
                    setprop("/controls/gear/floats-inflat",0);
                    setprop("/controls/gear/floats-armed",0);
                  } else {
                    screen.log.write("Repack only possible on ground !!!");
                  }
                } else {
                    screen.log.write("already packed ...");
                }
              </script>
            </binding>
        </item>

        </menu>
      </default>
    </menubar>

  </sim>

  <consumables>
    <fuel>
      <tank>
        <name>Main</name>
        <selected type="bool" write="n">1</selected>
        <density-ppg type="double" write="n">6.682</density-ppg>
      </tank>
    </fuel>
  </consumables>

  <controls>
   <gear>
    <floats-inflat type ="bool">false</floats-inflat>
    <floats-armed type ="bool">false</floats-armed>
   </gear>

   <rotor>
     <brake type ="double">1</brake>
     <brake-locked type ="bool">1</brake-locked>
     <reltarget type="double">0</reltarget>
     <maxreltorque type="double">0</maxreltorque>
   </rotor>

   <engines>
    <engine n="0">
      <magnetos>1</magnetos>
      <propeller-pitch alias="/controls/engines/power-trim"/>
      <mixture alias="/controls/engines/power-balance"/>
      <startselector type="bool">0</startselector>
      <switchguard type="bool">0</switchguard>
<!-- doesn't seem to work for initialization
      <oil-pressure-low type ="double">0</oil-pressure-low>
      <oil-pressure-norm type ="double">0</oil-pressure-norm>
      <oil-pressure-bar type ="double">0</oil-pressure-bar>
-->
    </engine>
    <engine n="1">
      <magnetos>1</magnetos>
      <propeller-pitch alias="/controls/engines/power-trim"/>
      <mixture alias="/controls/engines/power-balance"/>
      <throttle alias="/controls/engines/engine[0]/throttle"/>
    </engine>
    <power-trim type="double">0</power-trim>
    <power-balance type="double">0</power-balance>
   </engines>

   <lighting>
    <beacon type="bool">false</beacon>
    <strobe type="bool">false</strobe>
    <nav-lights type="bool">false</nav-lights>
   </lighting>

  </controls>
  
  <engines>
   <engine n="0">
    <tot-degc>0</tot-degc>
    <n1-pct>0</n1-pct>
   </engine>
  </engines>

  <instrumentation>
    <kcs55 include="Systems/kcs55.xml"/>
    <gsdi>
      <serviceable type="bool">true</serviceable>
    </gsdi>
    <attitude-indicator>
      <serviceable type="bool">false</serviceable>
      <caged type="bool">false</caged>
      <horizon-offset-deg type="double">0</horizon-offset-deg>
    </attitude-indicator>
  </instrumentation>

  <input>
    <keyboard include="Models/SearchLight/searchlight_bindings.xml">

      <!-- multi-key commands -->
      <multikey include="Systems/ec130-multikey.xml"/>

      <key n="97">
        <name>a</name>
        <desc>Set collective to zero</desc>
        <binding>
          <command>nasal</command>
          <script>interpolate("/controls/engines/engine/throttle", 1.0, 1.25)</script>
        </binding>
      </key>

      <key n="5">
        <name>Ctrl-e</name>
        <desc>Autostart</desc>
        <binding>
          <condition>
            <property>/sim/signals/fdm-initialized</property>
          </condition>
          <command>nasal</command>
          <script>ec130.autostart()</script>
         </binding>
      </key>

      <key n="69">
        <name>Shift-E</name>
        <desc>Autoshutdown</desc>
        <binding>
          <command>nasal</command>
          <script>ec130.autoshutdown()</script>
         </binding>
      </key>

      <key n="114">
        <name>r</name>
        <desc>Apply rotor brake</desc>
        <repeatable type="bool">false</repeatable>
        <binding>
          <command>nasal</command>
          <script>
            if ( getprop("/controls/rotor/brake-locked") ) {
              screen.log.write("Rotorbrake is locked !!!");
            } else {
              if ( getprop("/controls/rotor/brake") &lt; 1.0 ) {
                setprop("/controls/rotor/brake-engaged",0);
                interpolate("/controls/rotor/brake", 1.0, 1);
                gui.popupTip("Rotorbrake active ...", 20);
              } else {
                setprop("/controls/rotor/brake-engaged",1);
                if ( getprop("/controls/rotor/brake-locked") ) {
                  screen.log.write("Rotorbrake is locked !!!");
                } else {
                  screen.log.write("Rotorbrake is engaged !!!");
                }
              }
            }
          </script>
        </binding>
        <mod-up>
        <binding>
          <command>nasal</command>
          <script>
            if ( !getprop("/controls/rotor/brake-locked") ) {
              if ( !getprop("/controls/rotor/brake-engaged") ) {
                interpolate("/controls/rotor/brake", 0.0, 1);
                gui.popupTip("Rotorbrake released");
              }
            }
          </script>
        </binding>
        </mod-up>
      </key>

      <key n="82">
        <name>Shift-R</name>
        <desc>Toggle rotor brake</desc>
        <repeatable type="bool">false</repeatable>
        <binding>
          <command>nasal</command>
          <script>ec130.toggle_rotorbrake();</script>
        </binding>
        <mod-up>
        <binding>
          <command>null</command>
        </binding>
        </mod-up>
      </key>

      <key n="114">
       <mod-alt>
        <name>Alt-r</name>
        <desc>toggle rotor brake lock</desc>
        <repeatable type="bool">false</repeatable>
        <binding>
          <command>nasal</command>
          <script>
            if ( getprop("/controls/rotor/brake-locked") ) {
              setprop("/controls/rotor/brake-locked",0);
              gui.popupTip("Rotorbrake unlocked", 2);
            } else {
              setprop("/controls/rotor/brake-locked",1);
              gui.popupTip("Rotorbrake locked", 2);
            }
          </script>
        </binding>
        <mod-up>
        <binding>
          <command>null</command>
        </binding>
        </mod-up>
       </mod-alt>
      </key>

      <key n="99">
       <mod-alt>
        <name>Alt-c</name>
        <desc>toggle Cutoff lever</desc>
        <binding>
          <command>nasal</command>
          <script>ec130.toggle_cutoff();</script>
        </binding>
       </mod-alt>
      </key>

      <key n="99">
       <mod-alt>
        <mod-ctrl>
         <name>AltGr-c</name>
         <desc>toggle Cutoff lever guard</desc>
         <binding>
           <condition>
            <not>
              <property>controls/engines/engine/cutoff</property>
            </not>
           </condition>
           <command>nasal</command>
           <script>
             if ( getprop("/controls/engines/engine/cutoffguard") ) {
               setprop("/controls/engines/engine/cutoffguard",0);
               gui.popupTip("Cutoff unlocked", 2);
             } else {
               setprop("/controls/engines/engine/cutoffguard",1);
               gui.popupTip("Cutoff locked", 2);
             }
           </script>
         </binding>
        </mod-ctrl>
       </mod-alt>
      </key>

      <key n="70">
        <name>Shift-F</name>
        <desc>toggle Emergency Floats armed</desc>
        <binding>
          <command>nasal</command>
          <script>
            var f = getprop("/controls/gear/floats-armed");
            if ( getprop("/sim/model/ec130/emerg_floats") ) {
              setprop("/controls/gear/floats-armed",!f);
              gui.popupTip("Floats " ~ (f ? "disabled !" : "armed !"));
            } else {
              screen.log.write("NO Floats available !!!");
            }
          </script>
        </binding>
      </key>

      <key n="102">
       <mod-alt>
        <name>Alt-f</name>
        <desc>inflate/repack Emergency Floats</desc>
        <binding>
          <command>nasal</command>
          <script>ec130.toggle_floats();</script>
        </binding>
       </mod-alt>
      </key>

      <key n="100">
        <name>d</name>
        <desc>toggle Pilot door</desc>
        <binding>
          <command>nasal</command>
          <script>
            doors.doorsystem.frontlexport();
          </script>
        </binding>
        <mod-alt>
         <name>Alt-d</name>
         <desc>toggle luggage doors</desc>
         <binding>
          <command>nasal</command>
          <script>
            doors.doorsystem.luggagelexport();
            doors.doorsystem.luggagerexport();
            doors.doorsystem.doorbexport();
          </script>
         </binding>
         <mod-ctrl>
         <name>AltGr-d</name>
         <desc>toggle pilot window</desc>
         <binding>
          <command>nasal</command>
          <script>
            doors.doorsystem.pilotwexport();
          </script>
         </binding>
        </mod-ctrl>
       </mod-alt>
      </key>

      <key n="98">
        <name>b</name>
        <mod-alt>
         <name>Alt-b</name>
         <desc>toggle basket covers</desc>
         <binding>
          <command>nasal</command>
          <script>
            doors.doorsystem.basketlexport();
            doors.doorsystem.basketrexport();
          </script>
         </binding>
       </mod-alt>
      </key>

      <key n="68">
        <name>D</name>
        <desc>toggle Passenger doors</desc>
        <binding>
          <command>nasal</command>
          <script>
            doors.doorsystem.frontrexport();
            doors.doorsystem.passengerlexport();
          </script>
        </binding>
      </key>

      <key n="4">
        <name>Ctrl-d</name>
        <desc>toggle all doors</desc>
        <binding>
          <command>nasal</command>
          <script>ec130.toggle_all_doors();</script>
        </binding>
      </key>

      <key n="49">
        <name>1</name>
        <desc>toggle front door left (pilot)</desc>
        <binding>
          <command>nasal</command>
          <script>
            doors.doorsystem.frontlexport();
          </script>
        </binding>
      </key>

      <key n="50">
        <name>2</name>
        <desc>toggle front door right</desc>
        <binding>
          <command>nasal</command>
          <script>
            doors.doorsystem.frontrexport();
          </script>
        </binding>
      </key>

      <key n="51">
        <name>3</name>
        <desc>toggle back door left</desc>
        <binding>
          <command>nasal</command>
          <script>
            doors.doorsystem.passengerlexport();
          </script>
        </binding>
      </key>

      <key n="52">
        <name>4</name>
        <desc>toggle back door right</desc>
        <binding>
          <command>nasal</command>
          <script>
            doors.doorsystem.passengerrexport();
          </script>
        </binding>
      </key>

      <key n="108">
        <name>L</name>
        <desc>toggle Taxi Light</desc>
        <binding>
          <command>property-toggle</command>
          <property>controls/lighting/taxi-light</property>
        </binding>
      </key>

      <key n="76">
        <name>Shift-L</name>
        <desc>toggle Landing Light</desc>
        <binding>
          <command>property-toggle</command>
          <property>controls/lighting/landing-lights</property>
        </binding>
      </key>

      <key n="107">
       <mod-alt>
        <name>Alt-k</name>
        <desc>cycle wake visible</desc>
        <binding>
         <command>nasal</command>
         <script>ec130.cycle_wakes()</script>
        </binding>
       </mod-alt>
      </key>

      <key n="97">
       <mod-alt>
        <name>Alt-a</name>
        <desc>Antenna Setup</desc>
        <binding>
          <command>nasal</command>
            <script>
              if ( getprop("gear/gear[0]/wow") ) {
                if ( getprop("/sim/model/ec130/config_dialog_active") ) {
                  ec130.config_dialog.toggle();
                }
                if ( getprop("/sim/model/ec130/antenna_dialog_active") ) {
                  setprop("/sim/model/ec130/antenna_dialog_active",0);
                }
                ec130.antenna_config_dialog.toggle();
              } else {
                screen.log.write("Only possible on ground !!!");
              }
            </script>
        </binding>
       </mod-alt>
      </key>

      <key n="103">
       <mod-alt>
        <name>Alt-g</name>
        <desc>Show/hide GSDI</desc>
        <binding>
         <command>property-toggle</command>
          <property>/sim/model/ec130/show_gsdi</property>
        </binding>
       </mod-alt>
      </key>

      <key n="104">
       <mod-alt>
        <name>Alt-h</name>
        <desc>toggle Horn</desc>
        <binding>
         <command>property-toggle</command>
          <property>/controls/electric/horn</property>
        </binding>
       </mod-alt>
      </key>

      <key n="105">
       <mod-alt>
        <name>Alt-i</name>
        <desc>Model/Operator Info</desc>
        <binding>
          <command>nasal</command>
          <script>
            if ( getprop("/sim/model/ec130/config_dialog_active") ) {
              ec130.config_dialog.toggle();
            }
            if ( getprop("/sim/model/ec130/info_dialog_active") ) {
              setprop("/sim/model/ec130/info_dialog_active",0);
            }
            ec130.model_info_dialog.toggle();
          </script>
        </binding>
       </mod-alt>
      </key>

      <key n="112">
        <name>Alt-p</name>
        <desc>Supply External Power</desc>
        <mod-alt>
        <binding>
          <command>nasal</command>
          <script>ec130.toggle_powersupply()</script>
        </binding>
        <mod-ctrl>
          <name>AltGr-p</name>
          <desc>toggle Fuel Pump</desc>
          <binding>
            <condition>
              <property>systems/electrical/volts</property>
            </condition>
            <command>property-toggle</command>
            <property>/controls/fuel/tank/boost-pump</property>
          </binding>
        </mod-ctrl>
        </mod-alt>
      </key>

      <!-- disable w-binding -->
      <key n="119">
        <name>w</name>
        <desc>w-Key</desc>
        <binding>
          <command>nasal</command>
          <script>
            <!-- disable binding -->
          </script>
        </binding>
      </key>

      <key n="119">
        <repeatable>false</repeatable>
        <mod-alt>
        <name>Alt-w</name>
        <desc>Toggle W/LT TST</desc>
        <binding>
         <command>property-toggle</command>
         <property>controls/electric/warningtest</property>
        </binding>
        </mod-alt>
        <mod-up>
         <binding>
           <command>property-assign</command>
           <property>controls/electric/warningtest</property>
           <value>0</value>
         </binding>
        </mod-up>
      </key>

      <!-- controls for hook -->
      <key n="111">
        <name>o</name>
        <desc>Lock hook</desc>
        <binding>
          <command>nasal</command>
          <script>
            if ( getprop("sim/model/ec130/doors/hook/position-norm") ) {
              doors.doorsystem.hookexport();
              settimer( func {
                setprop("/sim/hitches/aerotow/open",0);
              }, 2);
            }
          </script>
        </binding>
       <mod-alt>
        <name>Alt-o</name>
        <desc>Configuration Options</desc>
        <binding>
         <command>nasal</command>
         <script>
           if ( getprop("gear/gear[0]/wow") ) {
             if ( getprop("/sim/model/ec130/config_dialog_active") ) {
               setprop("/sim/model/ec130/config_dialog_active",0);
             }
             ec130.config_dialog.toggle();

             <!-- toggle antenna dialog if open -->
             if ( getprop("/sim/model/ec130/antenna_dialog_active") ) {
               ec130.antenna_config_dialog.toggle();
               setprop("/sim/model/ec130/antenna_dialog_active",0);
             }

             <!-- toggle info dialog if open -->
             if ( getprop("/sim/model/ec130/info_dialog_active") ) {
               ec130.model_info_dialog.toggle();
               setprop("/sim/model/ec130/info_dialog_active",0);
             }

           } else {
             screen.log.write("Only possible on ground !!!");
           }
         </script>
        </binding>
        <mod-ctrl>
         <name>AltGr-o</name>
         <desc>Simulation Options</desc>
         <binding>
          <command>nasal</command>
          <script>ec130.options_dialog.toggle();</script>
         </binding>
        </mod-ctrl>
       </mod-alt>
      </key>

      <key n="79">
        <name>O</name>
        <desc>Open hook</desc>
        <binding>
          <command>nasal</command>
          <script>
            if ( !getprop("sim/model/ec130/doors/hook/position-norm") ) {
              setprop("/sim/hitches/aerotow/open",1);
              doors.doorsystem.hookexport();
            }
          </script>
        </binding>
      </key>

      <key n="15">
        <name>Ctrl-o</name>
        <desc>Find load for aerotow</desc>
        <binding>
          <command>property-assign</command>
          <property>/controls/aerotow/find-aircraft</property>
          <value type="bool">true</value>
        </binding>
        <mod-up>
          <binding>
            <command>property-assign</command>
            <property>/controls/aerotow/find-aircraft</property>
            <value type="bool">false</value>
          </binding>
        </mod-up>
      </key>

      <!-- trimming -->
      <key n="116">
        <name>t</name>
        <desc>Direct Trim Elev./Aileron</desc>
        <repeatable type="bool">true</repeatable>
        <binding>
        <command>nasal</command>
        <script>
          <!-- set trim -->
          setprop("/controls/flight/elevator-trim", getprop("/controls/flight/elevator")+getprop("/controls/flight/elevator-trim"));
          setprop("/controls/flight/aileron-trim", getprop("/controls/flight/aileron")+getprop("/controls/flight/aileron-trim"));
          <!-- center stick -->
          setprop("/controls/flight/aileron", 0);
          setprop("/controls/flight/elevator", 0);
        </script>
        </binding>
        <mod-alt>
          <name>Alt-t</name>
          <desc>Twist Grip +</desc>
          <binding>
          <command>nasal</command>
          <script>ec130.adjust_twist_grip(1);</script>
          </binding>
          <mod-ctrl>
            <name>AltGr-t</name>
            <desc>Twist Grip -</desc>
            <binding>
            <command>nasal</command>
            <script>ec130.adjust_twist_grip(-1);</script>
            </binding>
          </mod-ctrl>
        </mod-alt>
      </key>

      <key n="84">
        <name>T</name>
        <desc>Direct Trim Rudder</desc>
        <binding>
        <command>nasal</command>
        <script>
          <!-- set trim -->
          setprop("/controls/flight/rudder-trim", getprop("/controls/flight/rudder")+getprop("/controls/flight/rudder-trim"));
          <!-- center stick -->
          setprop("/controls/flight/rudder", 0);
        </script>
       </binding>
      </key>

      <!-- doesn't seem to work for RC radio -->
      <key n="102">
        <name>f</name>
        <desc>Force Trim Release</desc>
        <binding>
          <command>nasal</command>
          <script>ec130.ftr_start()</script>
        </binding>
        <mod-up>
          <binding>
            <command>nasal</command>
            <script>ec130.ftr_stop()</script>
          </binding>
        </mod-up>
      </key>

      <key n="125">
        <name>}</name>
        <desc>Start Engines</desc>
        <binding>
          <command>nasal</command>
          <script>ec130.autostart()</script>
          <condition>
            <property>/sim/signals/fdm-initialized</property>
          </condition>
        </binding>
      </key>

      <key n="123">
        <name>{</name>
        <desc>Shutdown Engines</desc>
        <binding>
          <command>nasal</command>
          <script>ec130.autoshutdown()</script>
          <condition>
            <property>/sim/signals/fdm-initialized</property>
          </condition>
        </binding>
      </key>

      <!-- overdef default for Cockpit View handling -->
      <key n="22">
        <name>Ctrl-v</name>
        <desc>Select Cockpit View (View 0)</desc>
        <binding>
          <command>nasal</command>
          <script>ec130.set_pilot_view()</script>
        </binding>
      </key>

    </keyboard>
  </input>

  <nasal>
    <doors>
      <file>Aircraft/ec130/Nasal/doors.nas</file>
    </doors>
    <formation>
      <file>Aircraft/Generic/formation.nas</file>
    </formation>
    <ELT>
      <file>Aircraft/ec130/Models/Instruments/Breakers/ELTmessage.nas</file>
    </ELT>
    <ec130>
      <file>Aircraft/ec130/Nasal/ec130.nas</file>
      <file>Aircraft/ec130/Nasal/limits.nas</file>
      <file>Aircraft/ec130/Nasal/Electrical.nas</file>
      <file>Aircraft/ec130/Systems/kcs55.nas</file>
      <file>Aircraft/ec130/Models/Instruments/VEMD/VEMD.nas</file>
      <file>Aircraft/ec130/Models/Instruments/CWS/CWS.nas</file>
      <file>Aircraft/ec130/Models/Instruments/AI/AI.nas</file>
      <file>Aircraft/ec130/Models/SearchLight/searchlight.nas</file>
      <script><![CDATA[
              KCS55.new();
            ]]>
        <!-- disable standard fuel-payload menu, use aircraft specific -->
        gui.menuEnable("fuel-and-payload",0);

        <!-- init config dialog flag -->
        setprop("/sim/model/ec130/config_dialog_active",0);

        <!-- init antenna dialog flag -->
        setprop("/sim/model/ec130/antenna_dialog_active",0);

        <!-- init info dialog flag -->
        setprop("/sim/model/ec130/info_dialog_active",0);

        <!-- initialize number of flights -->
        if ( getprop("/sim/model/ec130/flightnumber") == nil ) {
          setprop("/sim/model/ec130/flightnumber", 0);
        }

        <!-- minimum number of flights for autostart/autoshutdown -->
        setprop("/sim/model/ec130/minflights",5);

        <!-- disable autostart menu, if less than minimum flights -->
        <!-- cross-check menubar definition -->
        if ( getprop("/sim/model/ec130/flightnumber") &lt; getprop("/sim/model/ec130/minflights") ) {
          setprop("/sim/menubar/default/menu[10]/item[4]/enabled",0);
        }

        <!-- menu label dependent on variant -->
        if ( getprop("/sim/model/variant") == "1" ) {
          setprop("/sim/menubar/default/menu[10]/label","EC130-B4");
        } else {
          setprop("/sim/menubar/default/menu[10]/label","H130");
        }
        var args = {'subsystem':'gui'};
        fgcommand("reinit",args);

        <!-- disable autoshutdown menu, if less than minimum flights -->
        <!-- cross-check menubar definition -->
        if ( getprop("/sim/model/ec130/flightnumber") &lt; getprop("/sim/model/ec130/minflights") ) {
          setprop("/sim/menubar/default/menu[10]/item[5]/enabled",0);
        }

        <!-- initialize equipment,seats,views, luggage -->
        ec130.aircraft_init();

        <!-- initialize stretcher position -->
        setprop("/controls/seat/stretcher/position-deg",0);

        <!-- initialize ELT -->
        setprop("/ELT/test",0);
        setprop("/ELT/armed",0);

        <!-- init searchlight props with delay
             otherwise Nasal error is raised   -->
        setlistener("/sim/signals/fdm-initialized", func {
          settimer(func { ec130.slight_init(); }, 1);
        });

        <!-- engine -->
        setprop("/engines/engine/oil-pressure-low",0);
        setprop("/engines/engine/oil-pressure-norm",0);
        setprop("/engines/engine/oil-pressure-bar",0);
        setprop("/controls/engines/engine/cutoff-norm",1);
        setprop("/controls/engines/engine/cutoffguard",0);

        <!-- disable shadow if rembrandt enabled -->
        if ( getprop("/sim/rendering/rembrandt/enabled")) {
          setprop("sim/model/ec130/shadow",0);
        }

        <!-- set directory for formations -->
        setprop("sim/formation/path","Aircraft/ec130/Models/Formations");

        <!-- deactivate formation handling
           it is activated by the last wingman at load time
        -->
        <!-- should be initialized in preferences.xml -->
        setprop("/sim/formation/override",1);
        setprop("/sim/formation/delayed",1);

        <!-- set first formation -->
        setprop("/sim/model/formation/variant","Row");

      </script>
    </ec130>
  </nasal>

  <rotors>
    <main>
      <rpm type="double">0</rpm>
      <wakevisible type="double">2</wakevisible>
    </main>
  </rotors>

</PropertyList>

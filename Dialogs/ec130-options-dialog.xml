<?xml version="1.0"?>

<!-- Eurocopter EC 130 Helicopter by Heiko Schulz, Michael Habarta

 This file is part of FlightGear, the free flight simulator
 http://www.flightgear.org/

 Copyright (C) 2009 Heiko Schulz, Heiko.H.Schulz@gmx.net
           (C) 2016 Michael Habarta, mhabarta@freenet.de

 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU General Public License as
 published by the Free Software Foundation; either version 2 of the
 License, or (at your option) any later version.

 This program is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 General Public License for more details.
-->

<PropertyList>

  <name>Options</name>

  <layout>vbox</layout>
  <resizable>false</resizable>
  <modal>false</modal>
  <draggable>true</draggable>
  <default-padding>3</default-padding>

  <nasal>
    <open>

      <!-- disable shadow if rembrandt enabled -->
      if ( getprop("/sim/rendering/rembrandt/enabled")) {
        setprop("sim/model/ec130/shadow",0);
      }

      <!-- init windscreen option -->
      var p = getprop("/sim/model/ec130/cockpit-windscreen-option");

      setprop("/sim/model/ec130/cockpit_windscreen_flag_0",0);
      setprop("/sim/model/ec130/cockpit_windscreen_flag_1",0);
      setprop("/sim/model/ec130/cockpit_windscreen_flag_2",0);

      if ( p == 0 ) { setprop("/sim/model/ec130/cockpit_windscreen_flag_0",1); }
      if ( p == 1 ) { setprop("/sim/model/ec130/cockpit_windscreen_flag_1",1); }
      if ( p == 2 ) { setprop("/sim/model/ec130/cockpit_windscreen_flag_2",1); }

      <!-- init light cone visible -->
      var p = getprop("/sim/model/searchlight/cone-visibility");

      setprop("/sim/model/searchlight/cone_flag_0",0);
      setprop("/sim/model/searchlight/cone_flag_1",0);
      setprop("/sim/model/searchlight/cone_flag_2",0);
      setprop("/sim/model/searchlight/cone_flag_3",0);

      if ( p == 0 ) { setprop("/sim/model/searchlight/cone_flag_0",1); }
      if ( p == 1 ) { setprop("/sim/model/searchlight/cone_flag_1",1); }
      if ( p == 2 ) { setprop("/sim/model/searchlight/cone_flag_2",1); }
      if ( p == 3 ) { setprop("/sim/model/searchlight/cone_flag_3",1); }

      <!-- init wakevisible -->
      var p = getprop("rotors/main/wakevisible");

      setprop("rotors/main/wake_flag_0",0);
      setprop("rotors/main/wake_flag_1",0);
      setprop("rotors/main/wake_flag_2",0);
      setprop("rotors/main/wake_flag_3",0);

      if ( p == 0 ) { setprop("rotors/main/wake_flag_0",1); }
      if ( p == 1 ) { setprop("rotors/main/wake_flag_1",1); }
      if ( p == 2 ) { setprop("rotors/main/wake_flag_2",1); }
      if ( p == 3 ) { setprop("rotors/main/wake_flag_3",1); }

      <!-- set title -->
      if ( getprop("/sim/model/variant") == "1" ) {
        setprop("/sim/gui/dialogs/ec130/options/dialog/group/text/label", "EC130-B4 Simulation Options (AltGr-o)");
      } else {
        setprop("/sim/gui/dialogs/ec130/options/dialog/group/text/label", "  H130 Simulation Options (AltGr-o)");
      }

    </open>
    <close># just kept for educational purposes :-)</close>
  </nasal>


  <!-- Title with Esc knob for closing -->
  <group>

    <layout>hbox</layout>
    <empty><stretch>1</stretch></empty>

    <!-- title is set through nasal script above -->
    <text>
      <label>x</label>
    </text>

    <empty><stretch>true</stretch></empty>

    <button>
      <legend></legend>
      <key>Esc</key>
      <pref-width>16</pref-width>
      <pref-height>16</pref-height>
      <binding>
        <command>nasal</command>
        <script>ec130.options_dialog.toggle()</script>
      </binding>
    </button>
  </group>

  <hrule/>

  <group>

    <layout>table</layout>
    <default-padding>5</default-padding>
    <halign>left</halign>

      <!-- only to get a gap between left border and checkbox -->
      <text>
        <row>0</row>
        <col>0</col>
        <label> </label>
        <halign>left</halign>
      </text>

      <checkbox>
        <row>0</row>
        <col>1</col>
        <halign>left</halign>
        <label> Shadow enabled (if Rembrandt OFF)</label>
        <property>sim/model/ec130/shadow</property>
        <live>true</live>
        <enable>
          <not>
            <property>/sim/rendering/rembrandt/enabled</property>
          </not>
        </enable>
        <binding>
          <command>dialog-apply</command>
        </binding>
      </checkbox>

  </group>

  <!-- only to get a empty line before next -->
  <text>
    <label>        -----------------------</label>
    <halign>left</halign>
  </text>

  <text>
    <label>  Windscreen:</label>
    <halign>left</halign>
  </text>

  <group>

    <layout>table</layout>
    <default-padding>5</default-padding>
    <halign>left</halign>

      <!-- only to get a gap between left border and checkbox -->
      <text>
        <row>0</row>
        <col>0</col>
        <label> </label>
        <halign>left</halign>
      </text>

      <radio>
        <row>0</row>
        <col>1</col>
        <halign>left</halign>
        <label> clear</label>
        <property>sim/model/ec130/cockpit_windscreen_flag_0</property>
        <live>true</live>
        <binding>
          <command>dialog-apply</command>
        </binding>
        <binding>
          <command>nasal</command>
          <script>
<!--
            setprop("sim/model/ec130/cockpit_windscreen_flag_0",0);
-->
            setprop("sim/model/ec130/cockpit_windscreen_flag_1",0);
            setprop("sim/model/ec130/cockpit_windscreen_flag_2",0);
            setprop("sim/model/ec130/cockpit-windscreen-option",0);
          </script>
        </binding>
      </radio>

      <radio>
        <row>0</row>
        <col>2</col>
        <halign>left</halign>
        <label> visible</label>
        <property>sim/model/ec130/cockpit_windscreen_flag_1</property>
        <live>true</live>
        <binding>
          <command>dialog-apply</command>
        </binding>
        <binding>
          <command>nasal</command>
          <script>
            setprop("sim/model/ec130/cockpit_windscreen_flag_0",0);
<!--
            setprop("sim/model/ec130/cockpit_windscreen_flag_1",0);
-->
            setprop("sim/model/ec130/cockpit_windscreen_flag_2",0);
            setprop("sim/model/ec130/cockpit-windscreen-option",1);
          </script>
        </binding>
      </radio>

      <radio>
        <row>0</row>
        <col>3</col>
        <halign>left</halign>
        <label> reflections</label>
        <property>sim/model/ec130/cockpit_windscreen_flag_2</property>
        <live>true</live>
        <binding>
          <command>dialog-apply</command>
        </binding>
        <binding>
          <command>nasal</command>
          <script>
            setprop("sim/model/ec130/cockpit_windscreen_flag_0",0);
            setprop("sim/model/ec130/cockpit_windscreen_flag_1",0);
<!--
            setprop("sim/model/ec130/cockpit_windscreen_flag_2",0);
-->
            setprop("sim/model/ec130/cockpit-windscreen-option",2);
          </script>
        </binding>
      </radio>

  </group>

      <!-- only to get a empty line before next -->
      <text>
        <label>        -----------------------</label>
        <halign>left</halign>
      </text>

  <text>
    <label>  Light-Cone Visibility:   (Alt-L)</label>
    <halign>left</halign>
    <enable>
      <property>controls/electric/engine/generator</property>
      <property>/sim/model/searchlight/active</property>
    </enable>
  </text>

  <group>

    <layout>table</layout>
    <default-padding>5</default-padding>
    <halign>left</halign>

      <!-- only to get a gap between left border and checkbox -->
      <text>
        <row>0</row>
        <col>0</col>
        <label> </label>
        <halign>left</halign>
      </text>

      <text>
        <row>0</row>
        <col>1</col>
        <label> </label>
        <halign>left</halign>
      </text>

      <radio>
        <row>0</row>
        <col>2</col>
        <halign>left</halign>
        <label> invisible</label>
        <property>/sim/model/searchlight/cone_flag_0</property>
        <live>true</live>
        <binding>
          <command>dialog-apply</command>
        </binding>
        <binding>
          <command>nasal</command>
          <script>
            setprop("/sim/model/searchlight/cone-visibility",0);
<!--
            setprop("/sim/model/searchlight/cone_flag_0",0);
-->
            setprop("/sim/model/searchlight/cone_flag_1",0);
            setprop("/sim/model/searchlight/cone_flag_2",0);
            setprop("/sim/model/searchlight/cone_flag_3",0);
          </script>
        </binding>
      </radio>

      <radio>
        <row>0</row>
        <col>3</col>
        <halign>left</halign>
        <label> low</label>
        <property>/sim/model/searchlight/cone_flag_1</property>
        <live>true</live>
        <binding>
          <command>dialog-apply</command>
        </binding>
        <binding>
          <command>nasal</command>
          <script>
            setprop("/sim/model/searchlight/cone-visibility",1);
            setprop("/sim/model/searchlight/cone_flag_0",0);
<!--
            setprop("/sim/model/searchlight/cone_flag_1",0);
-->
            setprop("/sim/model/searchlight/cone_flag_2",0);
            setprop("/sim/model/searchlight/cone_flag_3",0);
          </script>
        </binding>
      </radio>

      <radio>
        <row>1</row>
        <col>2</col>
        <halign>left</halign>
        <label> medium</label>
        <property>/sim/model/searchlight/cone_flag_2</property>
        <live>true</live>
        <binding>
          <command>dialog-apply</command>
        </binding>
        <binding>
          <command>nasal</command>
          <script>
            setprop("/sim/model/searchlight/cone-visibility",2);
            setprop("/sim/model/searchlight/cone_flag_0",0);
            setprop("/sim/model/searchlight/cone_flag_1",0);
<!--
            setprop("/sim/model/searchlight/cone_flag_2",0);
-->
            setprop("/sim/model/searchlight/cone_flag_3",0);
          </script>
        </binding>
      </radio>

      <radio>
        <row>1</row>
        <col>3</col>
        <halign>left</halign>
        <label> bright </label>
        <property>/sim/model/searchlight/cone_flag_3</property>
        <live>true</live>
        <binding>
          <command>dialog-apply</command>
        </binding>
        <binding>
          <command>nasal</command>
          <script>
            setprop("/sim/model/searchlight/cone-visibility",3);
            setprop("/sim/model/searchlight/cone_flag_0",0);
            setprop("/sim/model/searchlight/cone_flag_1",0);
            setprop("/sim/model/searchlight/cone_flag_2",0);
<!--
            setprop("/sim/model/searchlight/cone_flag_3",0);
-->
          </script>
        </binding>
      </radio>

  </group>

      <!-- only to get a empty line before next -->
      <text>
        <label>        -----------------------</label>
        <halign>left</halign>
      </text>

  <text>
    <label>  Rotor Wake Visibility:   (Alt-k)</label>
    <halign>left</halign>
  </text>

  <group>

    <layout>table</layout>
    <default-padding>5</default-padding>
    <halign>left</halign>

      <!-- only to get a gap between left border and checkbox -->
      <text>
        <row>0</row>
        <col>0</col>
        <label> </label>
        <halign>left</halign>
      </text>

      <text>
        <row>0</row>
        <col>1</col>
        <label> </label>
        <halign>left</halign>
      </text>

      <radio>
        <row>0</row>
        <col>2</col>
        <halign>left</halign>
        <label> invisible</label>
        <property>rotors/main/wake_flag_0</property>
        <live>true</live>
        <binding>
          <command>dialog-apply</command>
        </binding>
        <binding>
          <command>nasal</command>
          <script>
            setprop("rotors/main/wakevisible",0);
            gui.popupTip("Wake invisible");
<!--
            setprop("rotors/main/wake_flag_0",0);
-->
            setprop("rotors/main/wake_flag_1",0);
            setprop("rotors/main/wake_flag_2",0);
            setprop("rotors/main/wake_flag_3",0);
          </script>
        </binding>
      </radio>

      <radio>
        <row>0</row>
        <col>3</col>
        <halign>left</halign>
        <label> low</label>
        <property>rotors/main/wake_flag_1</property>
        <live>true</live>
        <binding>
          <command>dialog-apply</command>
        </binding>
        <binding>
          <command>nasal</command>
          <script>
            setprop("rotors/main/wakevisible",1);
            gui.popupTip("Wake low");
            setprop("rotors/main/wake_flag_0",0);
<!--
            setprop("rotors/main/wake_flag_1",0);
-->
            setprop("rotors/main/wake_flag_2",0);
            setprop("rotors/main/wake_flag_3",0);
          </script>
        </binding>
      </radio>

      <radio>
        <row>1</row>
        <col>2</col>
        <halign>left</halign>
        <label> medium</label>
        <property>rotors/main/wake_flag_2</property>
        <live>true</live>
        <binding>
          <command>dialog-apply</command>
        </binding>
        <binding>
          <command>nasal</command>
          <script>
            setprop("rotors/main/wakevisible",2);
            gui.popupTip("Wake medium");
            setprop("rotors/main/wake_flag_0",0);
            setprop("rotors/main/wake_flag_1",0);
<!--
            setprop("rotors/main/wake_flag_2",0);
-->
            setprop("rotors/main/wake_flag_3",0);
          </script>
        </binding>
      </radio>

      <radio>
        <row>1</row>
        <col>3</col>
        <halign>left</halign>
        <label> heavy (dynamic)</label>
        <property>rotors/main/wake_flag_3</property>
        <live>true</live>
        <binding>
          <command>dialog-apply</command>
        </binding>
        <binding>
          <command>nasal</command>
          <script>
            setprop("rotors/main/wakevisible",3);
            gui.popupTip("Wake heavy");
            setprop("rotors/main/wake_flag_0",0);
            setprop("rotors/main/wake_flag_1",0);
            setprop("rotors/main/wake_flag_2",0);
<!--
            setprop("rotors/main/wake_flag_3",0);
-->
          </script>
        </binding>
      </radio>

  </group>

  <hrule/>

  <group>
    <layout>hbox</layout>
    <default-padding>3</default-padding>

    <button>
      <legend>Close</legend>
      <equal>true</equal>
      <key>Esc</key>
      <default>true</default>
      <binding>
        <command>nasal</command>
        <script>ec130.options_dialog.toggle()</script>
      </binding>
    </button>

  </group>

</PropertyList>

